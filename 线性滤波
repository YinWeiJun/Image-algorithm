基本概念
=======
    首先，我们有一个二维的滤波器矩阵（有个高大上的名字叫卷积核）和一个要处理的二维图像。
    然后，对于图像的每一个像素点，计算它的邻域像素和滤波器矩阵的对应元素的乘积，然后加起来，作为该像素位置的值。
    这样就完成了滤波过程。
    
        图像矩阵                卷积核                 卷积过程(滤波过程）
    -----------------       -------------       -------------------------    --
    | 0 | 0 | 0 | 2 |       | 1 | 0 | 1 |       | 0 x 1 | 0 x 0 | 0 x 1 |     |
    -----------------       -------------       -------------------------     |
    | 0 | 1 | 1 | 0 |       | 0 | 1 | 0 |       | 0 x 0 | 1 x 1 | 1 x 0 |     |--> 0*1 + 0*0 + 0*1 + 0*0 + 1*1 + 1*0 + 0*1 + 1*0 + 2*1 
    -----------------       -------------       -------------------------     |    = 3
    | 0 | 1 | 2 | 1 |       | 1 | 0 | 1 |       | 0 x 1 | 1 x 0 | 2 x 1 |     |    所以f(1,1) = 3, 同理计算其他位置的值。
    -----------------       -------------       -------------------------    --
    | 1 | 2 | 1 | 1 |
    -----------------
    
    对于滤波器，也有一定的规则要求：
                        ====
     1）滤波器的大小应该是奇数，这样它才有一个中心，例如3x3，5x5或者7x7。有中心了，也有了半径的称呼，例如5x5大小的核的半径就是2。
               -------------
     2）滤波器矩阵所有的元素之和应该要等于1，这是为了保证滤波前后图像的亮度保持不变。当然了，这不是硬性要求了。
                 ------------------------
     3）如果滤波器矩阵所有元素之和大于1，那么滤波后的图像就会比原图像更亮，反之，如果小于1，那么得到的图像就会变暗。
     
        如果和为0，图像不会变黑，但也会非常暗。

     4）对于滤波后的结构，可能会出现负数或者大于255的数值。对这种情况，我们将他们直接截断到0和255之间即可。对于负数，也可以取绝对值。
     
1. 图像锐化滤波器(Sharpness Filter)
==================================
    图像的锐化和边缘检测很像，首先找到边缘，然后把边缘加到原来的图像上面，这样就强化了图像的边缘，使图像看起来更加锐利了。
                            -----------------------------------------------------------------------------------
    这两者操作统一起来就是锐化滤波器了，也就是在边缘检测滤波器的基础上，再在中心的位置加1，这样滤波后的图像就会和原始的图像具有同样的亮度了，
    
    但是会更加锐利。
    
    如：  ----------------        ----------------        ----------------
          | -1 | -1 | -1 |        | +1 | +1 | +1 |        |  0 | -1 |  0 |
          ----------------        ----------------        ----------------
          | -1 | +9 | -1 |        | +1 | -7 | +1 |        | -1 | +5 | -1 |
          ----------------        ----------------        ----------------
          | -1 | -1 | -1 |        | +1 | +1 | +1 |        |  0 | -1 |  0 |
          ----------------        ----------------        ----------------
    
    大家应该也看出来了，锐化滤波器实际上就是计算当前点和周围点的差别，然后将这个差别加到原来的位置上。
                                         ----------------------------------------------------
2. 边缘检测(Edge Detection)
==========================
    水平的边缘：需要注意的是，这里矩阵的元素和是0，所以滤波后的图像会很暗，只有边缘的地方是有亮度的。
    
               为什么这个滤波器可以寻找到水平边缘呢？因为用这个滤波器卷积相当于求导的离散版本：你将当前的像素值减去前一个像素值，
      
               这样你就可以得到这个函数在这两个位置的差别或者斜率。
               如： ---------------------
                    | 0 | 0 | 0 | 0 | 0 |
                    ---------------------
                    | 0 | 0 | 0 | 0 | 0 |
                    ---------------------
                    |-1 |-1 | 2 | 0 | 0 |
                    ---------------------
                    | 0 | 0 | 0 | 0 | 0 |
                    ---------------------
                    | 0 | 0 | 0 | 0 | 0 |
                    ---------------------
    
    垂直方向的边缘：
               如： ---------------------
                    | 0 | 0 |-1 | 0 | 0 |
                    ---------------------
                    | 0 | 0 |-1 | 0 | 0 |
                    ---------------------
                    | 0 | 0 | 4 | 0 | 0 |
                    ---------------------
                    | 0 | 0 |-1 | 0 | 0 |
                    ---------------------
                    | 0 | 0 |-1 | 0 | 0 |
                    ---------------------
                    
    45°的边缘：
               如： ---------------------
                    |-1 | 0 | 0 | 0 | 0 |
                    ---------------------
                    | 0 |-2 | 0 | 0 | 0 |
                    ---------------------
                    | 0 | 0 | 6 | 0 | 0 |
                    ---------------------
                    | 0 | 0 | 0 |-2 | 0 |
                    ---------------------
                    | 0 | 0 | 0 | 0 |-1 |
                    ---------------------
                    
    所有方向的边缘：
                如： ------------
                    |-1 |-1 |-1 |
                    -------------
                    |-1 | 8 |-1 |
                    -------------
                    |-1 |-1 |-1 |
                    -------------  
    为了检测边缘，我们需要在图像对应的方向计算梯度。用下面的卷积核来卷积图像，就可以了。
    
    但在实际中，这种简单的方法会把噪声也放大了。另外，需要注意的是，矩阵所有的值加起来要是0.
    
3. 浮雕(Embossing Filter)
=========================
    浮雕滤波器可以给图像一种3D阴影的效果。只要将中心一边的像素减去另一边的像素就可以了。
    
    这时候，像素值有可能是负数，我们将负数当成阴影，将正数当成光，然后我们对结果图像加上128的偏移。
    
    这时候，图像大部分就变成灰色了。
    
    45°的浮雕滤波器：
                如： ------------
                    |-1 |-1 | 0 |
                    -------------
                    |-1 | 0 | 1 |
                    -------------
                    | 0 | 1 | 1 |
                    ------------- 
    
     这种效果非常的漂亮，就像是将一副图像雕刻在一块石头上面一样，然后从一个方向照亮它。
     
     它和前面的滤波器不同，它是非对称的。另外，它会产生负数值，所以我们需要将结果偏移，以得到图像灰度的范围。
                 如： ------------
                     | 2 | 0 | 0 |
                     -------------
                     | 0 |-1 | 0 |
                     -------------
                     | 0 | 0 |-1 |
                     -------------     
4. 运动模式(Motion Blur)
=======================
    运动模糊可以通过只在一个方向模糊达到，例如下面9x9的运动模糊滤波器。注意，求和结果要除以9。
                1
                    1
                        1
                            .
                                .
                                    .
                                        1
     这个效果就好像，摄像机是从左上角移动的右下角。
     
4. 均值模糊(Box Filter)
=======================
     我们可以将当前像素和它的四邻域的像素一起取平均，然后再除以5，或者直接在滤波器的5个地方取0.2的值即可，如下图：
                 如： ------------        -------------
                     | 0 |0.2| 0 |        |1/9|1/9|1/9|
                     -------------        -------------
                     |0.2|0.2|0.2|        |1/9|1/9|1/9|
                     -------------        -------------
                     | 0 |0.2| 0 |        |1/9|1/9|1/9|
                     -------------        -------------
                     
5. 高斯模糊(Gaussian Filter)
===========================
    其实模糊滤波器就是对周围像素进行加权平均处理，均值模糊很简单，周围像素的权值都相同，所以不是很平滑。
    
    高斯模糊就有这个优点，所以被广泛用在图像降噪上。特别是在边缘检测之前，都会用来移除细节。那么下面我们就看看高斯模糊的权值是如何分配的。
    
               如： ---------------------
                    | 1 | 4 | 7 | 4 | 1 |
                    ---------------------
                    | 4 |16 |26 |16 | 4 |
                    ---------------------         1
                    | 7 |26 |41 |26 | 7 |   X   —————
                    ---------------------        273
                    | 4 |16 |26 |16 | 4 |
                    ---------------------
                    | 1 | 4 | 7 | 4 | 1 |
                    ---------------------
                    
                    
                    
                    
